#!/bin/bash

# Environment Files Cleanup Script
# This script safely consolidates and cleans up environment files

set -e

echo "üßπ Environment Files Cleanup Script"
echo "===================================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Backup directory
BACKUP_DIR=".env-backup-$(date +%Y%m%d-%H%M%S)"

echo "Step 1: Creating backup of all .env files..."
mkdir -p "$BACKUP_DIR"

# Find and backup all .env files
find . -name ".env*" -not -name ".env.example" -not -path "./node_modules/*" -not -path "./.git/*" | while read -r file; do
    cp "$file" "$BACKUP_DIR/" 2>/dev/null || true
    echo "  ‚úì Backed up: $file"
done

echo ""
echo -e "${GREEN}Backup created at: $BACKUP_DIR${NC}"
echo ""

echo "Step 2: Analyzing current structure..."
echo ""
echo "Root level .env files:"
ls -la .env* 2>/dev/null | grep -v "example" || echo "  None found"

echo ""
echo "Web-interface .env files:"
ls -la web-interface/.env* 2>/dev/null | grep -v "example" || echo "  None found"

echo ""
echo "Vercel folder:"
ls -la .vercel/.env* 2>/dev/null || echo "  None found"

echo ""
echo "=================================="
echo "Recommended Structure:"
echo "=================================="
echo ""
echo "Root Directory:"
echo "  ‚îú‚îÄ‚îÄ .env.example          ‚Üê Template for backend services"
echo "  ‚îú‚îÄ‚îÄ .env                  ‚Üê Local dev (gitignored)"
echo "  ‚îî‚îÄ‚îÄ .gitignore            ‚Üê Protects all .env files"
echo ""
echo "Web Interface:"
echo "  ‚îú‚îÄ‚îÄ web-interface/"
echo "  ‚îÇ   ‚îú‚îÄ‚îÄ .env.example      ‚Üê Template for Next.js"
echo "  ‚îÇ   ‚îú‚îÄ‚îÄ .env.local        ‚Üê Local dev (gitignored)"
echo "  ‚îÇ   ‚îî‚îÄ‚îÄ .gitignore        ‚Üê Protects all .env files"
echo ""
echo "Vercel (auto-generated, gitignored):"
echo "  ‚îî‚îÄ‚îÄ .vercel/              ‚Üê Managed by Vercel CLI"
echo "      ‚îú‚îÄ‚îÄ .env.preview.local"
echo "      ‚îî‚îÄ‚îÄ project.json"
echo ""

echo "=================================="
echo "Cleanup Actions:"
echo "=================================="
echo ""

# Check for duplicate or problematic files
echo -e "${YELLOW}Issues found:${NC}"
echo ""

# Check if root .env has web-specific vars
if [ -f ".env" ] && grep -q "NEXTAUTH" ".env" 2>/dev/null; then
    echo "‚ö†Ô∏è  Root .env contains Next.js specific vars (NEXTAUTH_*)"
    echo "   Recommendation: Move these to web-interface/.env.local"
    echo ""
fi

# Check if web-interface .env has backend-specific vars
if [ -f "web-interface/.env" ] && [ -f ".env" ]; then
    echo "‚ö†Ô∏è  Both root and web-interface have .env files"
    echo "   Recommendation: Separate backend (root) and frontend (web-interface) vars"
    echo ""
fi

# Check for .vercel/.env files (these should not be manually edited)
if [ -f ".vercel/.env.preview.local" ]; then
    echo "‚ÑπÔ∏è  .vercel/.env.preview.local exists (auto-generated by Vercel)"
    echo "   Action: This is normal, ensure .vercel/ is gitignored"
    echo ""
fi

echo "=================================="
echo "Would you like to:"
echo "=================================="
echo ""
echo "1. Keep current structure with better organization"
echo "2. Review the recommended structure"
echo "3. Exit and do it manually"
echo ""
echo "Enter your choice (1-3):"
read -r choice

case $choice in
    1)
        echo ""
        echo "Organizing files..."
        
        # Ensure web-interface uses .env.local instead of .env
        if [ -f "web-interface/.env" ]; then
            echo "  Moving web-interface/.env to .env.local..."
            mv "web-interface/.env" "web-interface/.env.local"
            echo "  ‚úì Done"
        fi
        
        echo ""
        echo -e "${GREEN}‚úì Cleanup complete!${NC}"
        echo ""
        echo "Next steps:"
        echo "1. Review $BACKUP_DIR if you need to restore anything"
        echo "2. Update Vercel environment variables via dashboard or CLI"
        echo "3. Never commit .env* files (except .env.example)"
        ;;
    2)
        echo ""
        echo "Review the structure above and manually organize your files."
        echo "Your backup is safe at: $BACKUP_DIR"
        ;;
    3)
        echo ""
        echo "Exiting. Your backup is at: $BACKUP_DIR"
        ;;
    *)
        echo "Invalid choice. Exiting."
        ;;
esac

echo ""
echo "=================================="
echo "Security Checklist:"
echo "=================================="
echo ""
echo "‚úì .gitignore updated to block all .env files"
echo "‚úì Backup created at: $BACKUP_DIR"
echo ""
echo "TODO:"
echo "‚ñ° Verify 'git status' shows no .env files"
echo "‚ñ° Add production secrets to Vercel dashboard"
echo "‚ñ° Remove placeholder values from all .env files"
echo "‚ñ° Document required env vars in .env.example files"
echo ""
